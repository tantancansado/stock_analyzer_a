
x

#!/bin/bash
# Script que funciona - usa la opción 1 del menú

PROJECT_DIR="/Users/alejandroordonezvillar/Desktop/stockAnalyzer/stock_analyzer_a"
PYTHON_PATH="/usr/bin/python3"
LOG_DIR="$PROJECT_DIR/logs"

# Crear log con timestamp
LOG_FILE="$LOG_DIR/cron_analysis_$(date +%Y%m%d_%H%M%S).log"

# Función de logging
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

log "🚀 INICIANDO ANÁLISIS AUTOMÁTICO CON OPCIÓN 1"
log "=============================================="
log "📁 Directorio: $PROJECT_DIR"
log "🐍 Python: $PYTHON_PATH"
log "📄 Log: $LOG_FILE"

# Cambiar al directorio del proyecto
cd "$PROJECT_DIR" || {
    log "❌ Error: No se pudo acceder al directorio $PROJECT_DIR"
    exit 1
}

# Verificar que main.py existe
if [[ ! -f "main.py" ]]; then
    log "❌ Error: main.py no encontrado en $PROJECT_DIR"
    exit 1
fi

log "📊 Ejecutando análisis con opción 1..."

# Ejecutar main.py con opción 1 (que sabemos que funciona)
# Usar timeout de 30 minutos y simular entrada "1"
echo "1" | timeout 1800 "$PYTHON_PATH" main.py >> "$LOG_FILE" 2>&1
exit_code=$?

if [[ $exit_code -eq 0 ]]; then
    log "✅ Análisis completado exitosamente"
elif [[ $exit_code -eq 124 ]]; then
    log "⏰ Análisis cancelado por timeout (30 minutos)"
else
    log "❌ Análisis falló con código: $exit_code"
fi

# Mostrar estadísticas de archivos generados
log "📊 ARCHIVOS GENERADOS:"
if [[ -f "$PROJECT_DIR/reports/insiders_daily.csv" ]]; then
    size=$(wc -l < "$PROJECT_DIR/reports/insiders_daily.csv")
    log "   ✅ insiders_daily.csv: $size líneas"
else
    log "   ❌ insiders_daily.csv: No generado"
fi

if [[ -f "$PROJECT_DIR/reports/insiders_opportunities.csv" ]]; then
    size=$(wc -l < "$PROJECT_DIR/reports/insiders_opportunities.csv")
    log "   ✅ insiders_opportunities.csv: $size líneas"
else
    log "   ❌ insiders_opportunities.csv: No generado"
fi

# Verificar subida a GitHub Pages
if [[ -d "$PROJECT_DIR/docs" ]]; then
    html_count=$(find "$PROJECT_DIR/docs" -name "*.html" | wc -l)
    log "   ✅ GitHub Pages: $html_count archivos HTML"
else
    log "   ❌ GitHub Pages: Directorio docs no existe"
fi

# Limpiar logs antiguos (mantener solo 14 días)
find "$LOG_DIR" -name "cron_analysis_*.log" -mtime +14 -delete 2>/dev/null

log "🏁 Análisis automático finalizado"

exit $exit_code
